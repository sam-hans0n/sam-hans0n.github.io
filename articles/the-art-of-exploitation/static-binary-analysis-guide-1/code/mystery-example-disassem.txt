
mystery-example:     file format elf64-x86-64


Disassembly of section .init:

0000000000000560 <_init>:
 560:	48 83 ec 08          	sub    $0x8,%rsp
 564:	48 8b 05 2d 06 20 00 	mov    0x20062d(%rip),%rax        # 200b98 <__gmon_start__>
 56b:	48 85 c0             	test   %rax,%rax
 56e:	74 02                	je     572 <_init+0x12>
 570:	ff d0                	callq  *%rax
 572:	48 83 c4 08          	add    $0x8,%rsp
 576:	c3                   	retq   

Disassembly of section .plt:

0000000000000580 <.plt>:
 580:	ff 35 32 06 20 00    	pushq  0x200632(%rip)        # 200bb8 <_GLOBAL_OFFSET_TABLE_+0x8>
 586:	ff 25 34 06 20 00    	jmpq   *0x200634(%rip)        # 200bc0 <_GLOBAL_OFFSET_TABLE_+0x10>
 58c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000590 <strcpy@plt>:
 590:	ff 25 32 06 20 00    	jmpq   *0x200632(%rip)        # 200bc8 <strcpy@GLIBC_2.2.5>
 596:	68 00 00 00 00       	pushq  $0x0
 59b:	e9 e0 ff ff ff       	jmpq   580 <.plt>

00000000000005a0 <puts@plt>:
 5a0:	ff 25 2a 06 20 00    	jmpq   *0x20062a(%rip)        # 200bd0 <puts@GLIBC_2.2.5>
 5a6:	68 01 00 00 00       	pushq  $0x1
 5ab:	e9 d0 ff ff ff       	jmpq   580 <.plt>

00000000000005b0 <printf@plt>:
 5b0:	ff 25 22 06 20 00    	jmpq   *0x200622(%rip)        # 200bd8 <printf@GLIBC_2.2.5>
 5b6:	68 02 00 00 00       	pushq  $0x2
 5bb:	e9 c0 ff ff ff       	jmpq   580 <.plt>

00000000000005c0 <exit@plt>:
 5c0:	ff 25 1a 06 20 00    	jmpq   *0x20061a(%rip)        # 200be0 <exit@GLIBC_2.2.5>
 5c6:	68 03 00 00 00       	pushq  $0x3
 5cb:	e9 b0 ff ff ff       	jmpq   580 <.plt>

Disassembly of section .plt.got:

00000000000005d0 <__cxa_finalize@plt>:
 5d0:	ff 25 d2 05 20 00    	jmpq   *0x2005d2(%rip)        # 200ba8 <__cxa_finalize@GLIBC_2.2.5>
 5d6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000005e0 <_start>:
 5e0:	31 ed                	xor    %ebp,%ebp
 5e2:	49 89 d1             	mov    %rdx,%r9
 5e5:	5e                   	pop    %rsi
 5e6:	48 89 e2             	mov    %rsp,%rdx
 5e9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 5ed:	50                   	push   %rax
 5ee:	54                   	push   %rsp
 5ef:	4c 8d 05 ea 01 00 00 	lea    0x1ea(%rip),%r8        # 7e0 <__libc_csu_fini>
 5f6:	48 8d 0d 73 01 00 00 	lea    0x173(%rip),%rcx        # 770 <__libc_csu_init>
 5fd:	48 8d 3d 20 01 00 00 	lea    0x120(%rip),%rdi        # 724 <main>
 604:	ff 15 86 05 20 00    	callq  *0x200586(%rip)        # 200b90 <__libc_start_main@GLIBC_2.2.5>
 60a:	f4                   	hlt    
 60b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000610 <deregister_tm_clones>:
 610:	48 8d 3d e1 05 20 00 	lea    0x2005e1(%rip),%rdi        # 200bf8 <__TMC_END__>
 617:	55                   	push   %rbp
 618:	48 8d 05 d9 05 20 00 	lea    0x2005d9(%rip),%rax        # 200bf8 <__TMC_END__>
 61f:	48 39 f8             	cmp    %rdi,%rax
 622:	48 89 e5             	mov    %rsp,%rbp
 625:	74 19                	je     640 <deregister_tm_clones+0x30>
 627:	48 8b 05 5a 05 20 00 	mov    0x20055a(%rip),%rax        # 200b88 <_ITM_deregisterTMCloneTable>
 62e:	48 85 c0             	test   %rax,%rax
 631:	74 0d                	je     640 <deregister_tm_clones+0x30>
 633:	5d                   	pop    %rbp
 634:	ff e0                	jmpq   *%rax
 636:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 63d:	00 00 00 
 640:	5d                   	pop    %rbp
 641:	c3                   	retq   
 642:	0f 1f 40 00          	nopl   0x0(%rax)
 646:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 64d:	00 00 00 

0000000000000650 <register_tm_clones>:
 650:	48 8d 3d a1 05 20 00 	lea    0x2005a1(%rip),%rdi        # 200bf8 <__TMC_END__>
 657:	48 8d 35 9a 05 20 00 	lea    0x20059a(%rip),%rsi        # 200bf8 <__TMC_END__>
 65e:	55                   	push   %rbp
 65f:	48 29 fe             	sub    %rdi,%rsi
 662:	48 89 e5             	mov    %rsp,%rbp
 665:	48 c1 fe 03          	sar    $0x3,%rsi
 669:	48 89 f0             	mov    %rsi,%rax
 66c:	48 c1 e8 3f          	shr    $0x3f,%rax
 670:	48 01 c6             	add    %rax,%rsi
 673:	48 d1 fe             	sar    %rsi
 676:	74 18                	je     690 <register_tm_clones+0x40>
 678:	48 8b 05 21 05 20 00 	mov    0x200521(%rip),%rax        # 200ba0 <_ITM_registerTMCloneTable>
 67f:	48 85 c0             	test   %rax,%rax
 682:	74 0c                	je     690 <register_tm_clones+0x40>
 684:	5d                   	pop    %rbp
 685:	ff e0                	jmpq   *%rax
 687:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 68e:	00 00 
 690:	5d                   	pop    %rbp
 691:	c3                   	retq   
 692:	0f 1f 40 00          	nopl   0x0(%rax)
 696:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 69d:	00 00 00 

00000000000006a0 <__do_global_dtors_aux>:
 6a0:	80 3d 51 05 20 00 00 	cmpb   $0x0,0x200551(%rip)        # 200bf8 <__TMC_END__>
 6a7:	75 2f                	jne    6d8 <__do_global_dtors_aux+0x38>
 6a9:	48 83 3d f7 04 20 00 	cmpq   $0x0,0x2004f7(%rip)        # 200ba8 <__cxa_finalize@GLIBC_2.2.5>
 6b0:	00 
 6b1:	55                   	push   %rbp
 6b2:	48 89 e5             	mov    %rsp,%rbp
 6b5:	74 0c                	je     6c3 <__do_global_dtors_aux+0x23>
 6b7:	48 8b 3d 32 05 20 00 	mov    0x200532(%rip),%rdi        # 200bf0 <__dso_handle>
 6be:	e8 0d ff ff ff       	callq  5d0 <__cxa_finalize@plt>
 6c3:	e8 48 ff ff ff       	callq  610 <deregister_tm_clones>
 6c8:	c6 05 29 05 20 00 01 	movb   $0x1,0x200529(%rip)        # 200bf8 <__TMC_END__>
 6cf:	5d                   	pop    %rbp
 6d0:	c3                   	retq   
 6d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 6d8:	f3 c3                	repz retq 
 6da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000006e0 <frame_dummy>:
 6e0:	55                   	push   %rbp
 6e1:	48 89 e5             	mov    %rsp,%rbp
 6e4:	5d                   	pop    %rbp
 6e5:	e9 66 ff ff ff       	jmpq   650 <register_tm_clones>

00000000000006ea <aFunction>:
 6ea:	55                   	push   %rbp
 6eb:	48 89 e5             	mov    %rsp,%rbp
 6ee:	48 83 ec 20          	sub    $0x20,%rsp
 6f2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 6f6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 6fa:	48 8d 45 f6          	lea    -0xa(%rbp),%rax
 6fe:	48 89 d6             	mov    %rdx,%rsi
 701:	48 89 c7             	mov    %rax,%rdi
 704:	e8 87 fe ff ff       	callq  590 <strcpy@plt>
 709:	48 8d 45 f6          	lea    -0xa(%rbp),%rax
 70d:	48 89 c6             	mov    %rax,%rsi
 710:	48 8d 3d dd 00 00 00 	lea    0xdd(%rip),%rdi        # 7f4 <_IO_stdin_used+0x4>
 717:	b8 00 00 00 00       	mov    $0x0,%eax
 71c:	e8 8f fe ff ff       	callq  5b0 <printf@plt>
 721:	90                   	nop
 722:	c9                   	leaveq 
 723:	c3                   	retq   

0000000000000724 <main>:
 724:	55                   	push   %rbp
 725:	48 89 e5             	mov    %rsp,%rbp
 728:	48 83 ec 10          	sub    $0x10,%rsp
 72c:	89 7d fc             	mov    %edi,-0x4(%rbp)
 72f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 733:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
 737:	7f 16                	jg     74f <main+0x2b>
 739:	48 8d 3d c0 00 00 00 	lea    0xc0(%rip),%rdi        # 800 <_IO_stdin_used+0x10>
 740:	e8 5b fe ff ff       	callq  5a0 <puts@plt>
 745:	bf 00 00 00 00       	mov    $0x0,%edi
 74a:	e8 71 fe ff ff       	callq  5c0 <exit@plt>
 74f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 753:	48 83 c0 08          	add    $0x8,%rax
 757:	48 8b 00             	mov    (%rax),%rax
 75a:	48 89 c7             	mov    %rax,%rdi
 75d:	e8 88 ff ff ff       	callq  6ea <aFunction>
 762:	bf 00 00 00 00       	mov    $0x0,%edi
 767:	e8 54 fe ff ff       	callq  5c0 <exit@plt>
 76c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000770 <__libc_csu_init>:
 770:	41 57                	push   %r15
 772:	41 56                	push   %r14
 774:	49 89 d7             	mov    %rdx,%r15
 777:	41 55                	push   %r13
 779:	41 54                	push   %r12
 77b:	4c 8d 25 06 02 20 00 	lea    0x200206(%rip),%r12        # 200988 <__frame_dummy_init_array_entry>
 782:	55                   	push   %rbp
 783:	48 8d 2d 06 02 20 00 	lea    0x200206(%rip),%rbp        # 200990 <__init_array_end>
 78a:	53                   	push   %rbx
 78b:	41 89 fd             	mov    %edi,%r13d
 78e:	49 89 f6             	mov    %rsi,%r14
 791:	4c 29 e5             	sub    %r12,%rbp
 794:	48 83 ec 08          	sub    $0x8,%rsp
 798:	48 c1 fd 03          	sar    $0x3,%rbp
 79c:	e8 bf fd ff ff       	callq  560 <_init>
 7a1:	48 85 ed             	test   %rbp,%rbp
 7a4:	74 20                	je     7c6 <__libc_csu_init+0x56>
 7a6:	31 db                	xor    %ebx,%ebx
 7a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 7af:	00 
 7b0:	4c 89 fa             	mov    %r15,%rdx
 7b3:	4c 89 f6             	mov    %r14,%rsi
 7b6:	44 89 ef             	mov    %r13d,%edi
 7b9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 7bd:	48 83 c3 01          	add    $0x1,%rbx
 7c1:	48 39 dd             	cmp    %rbx,%rbp
 7c4:	75 ea                	jne    7b0 <__libc_csu_init+0x40>
 7c6:	48 83 c4 08          	add    $0x8,%rsp
 7ca:	5b                   	pop    %rbx
 7cb:	5d                   	pop    %rbp
 7cc:	41 5c                	pop    %r12
 7ce:	41 5d                	pop    %r13
 7d0:	41 5e                	pop    %r14
 7d2:	41 5f                	pop    %r15
 7d4:	c3                   	retq   
 7d5:	90                   	nop
 7d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 7dd:	00 00 00 

00000000000007e0 <__libc_csu_fini>:
 7e0:	f3 c3                	repz retq 

Disassembly of section .fini:

00000000000007e4 <_fini>:
 7e4:	48 83 ec 08          	sub    $0x8,%rsp
 7e8:	48 83 c4 08          	add    $0x8,%rsp
 7ec:	c3                   	retq   

mystery-example:     file format elf64-x86-64


Disassembly of section .init:

0000000000000560 <_init>:
 560:	48 83 ec 08          	sub    $0x8,%rsp
 564:	48 8b 05 2d 06 20 00 	mov    0x20062d(%rip),%rax        # 200b98 <__gmon_start__>
 56b:	48 85 c0             	test   %rax,%rax
 56e:	74 02                	je     572 <_init+0x12>
 570:	ff d0                	callq  *%rax
 572:	48 83 c4 08          	add    $0x8,%rsp
 576:	c3                   	retq   

Disassembly of section .plt:

0000000000000580 <.plt>:
 580:	ff 35 32 06 20 00    	pushq  0x200632(%rip)        # 200bb8 <_GLOBAL_OFFSET_TABLE_+0x8>
 586:	ff 25 34 06 20 00    	jmpq   *0x200634(%rip)        # 200bc0 <_GLOBAL_OFFSET_TABLE_+0x10>
 58c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000590 <strcpy@plt>:
 590:	ff 25 32 06 20 00    	jmpq   *0x200632(%rip)        # 200bc8 <strcpy@GLIBC_2.2.5>
 596:	68 00 00 00 00       	pushq  $0x0
 59b:	e9 e0 ff ff ff       	jmpq   580 <.plt>

00000000000005a0 <puts@plt>:
 5a0:	ff 25 2a 06 20 00    	jmpq   *0x20062a(%rip)        # 200bd0 <puts@GLIBC_2.2.5>
 5a6:	68 01 00 00 00       	pushq  $0x1
 5ab:	e9 d0 ff ff ff       	jmpq   580 <.plt>

00000000000005b0 <printf@plt>:
 5b0:	ff 25 22 06 20 00    	jmpq   *0x200622(%rip)        # 200bd8 <printf@GLIBC_2.2.5>
 5b6:	68 02 00 00 00       	pushq  $0x2
 5bb:	e9 c0 ff ff ff       	jmpq   580 <.plt>

00000000000005c0 <exit@plt>:
 5c0:	ff 25 1a 06 20 00    	jmpq   *0x20061a(%rip)        # 200be0 <exit@GLIBC_2.2.5>
 5c6:	68 03 00 00 00       	pushq  $0x3
 5cb:	e9 b0 ff ff ff       	jmpq   580 <.plt>

Disassembly of section .plt.got:

00000000000005d0 <__cxa_finalize@plt>:
 5d0:	ff 25 d2 05 20 00    	jmpq   *0x2005d2(%rip)        # 200ba8 <__cxa_finalize@GLIBC_2.2.5>
 5d6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000005e0 <_start>:
 5e0:	31 ed                	xor    %ebp,%ebp
 5e2:	49 89 d1             	mov    %rdx,%r9
 5e5:	5e                   	pop    %rsi
 5e6:	48 89 e2             	mov    %rsp,%rdx
 5e9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 5ed:	50                   	push   %rax
 5ee:	54                   	push   %rsp
 5ef:	4c 8d 05 ea 01 00 00 	lea    0x1ea(%rip),%r8        # 7e0 <__libc_csu_fini>
 5f6:	48 8d 0d 73 01 00 00 	lea    0x173(%rip),%rcx        # 770 <__libc_csu_init>
 5fd:	48 8d 3d 20 01 00 00 	lea    0x120(%rip),%rdi        # 724 <main>
 604:	ff 15 86 05 20 00    	callq  *0x200586(%rip)        # 200b90 <__libc_start_main@GLIBC_2.2.5>
 60a:	f4                   	hlt    
 60b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000610 <deregister_tm_clones>:
 610:	48 8d 3d e1 05 20 00 	lea    0x2005e1(%rip),%rdi        # 200bf8 <__TMC_END__>
 617:	55                   	push   %rbp
 618:	48 8d 05 d9 05 20 00 	lea    0x2005d9(%rip),%rax        # 200bf8 <__TMC_END__>
 61f:	48 39 f8             	cmp    %rdi,%rax
 622:	48 89 e5             	mov    %rsp,%rbp
 625:	74 19                	je     640 <deregister_tm_clones+0x30>
 627:	48 8b 05 5a 05 20 00 	mov    0x20055a(%rip),%rax        # 200b88 <_ITM_deregisterTMCloneTable>
 62e:	48 85 c0             	test   %rax,%rax
 631:	74 0d                	je     640 <deregister_tm_clones+0x30>
 633:	5d                   	pop    %rbp
 634:	ff e0                	jmpq   *%rax
 636:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 63d:	00 00 00 
 640:	5d                   	pop    %rbp
 641:	c3                   	retq   
 642:	0f 1f 40 00          	nopl   0x0(%rax)
 646:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 64d:	00 00 00 

0000000000000650 <register_tm_clones>:
 650:	48 8d 3d a1 05 20 00 	lea    0x2005a1(%rip),%rdi        # 200bf8 <__TMC_END__>
 657:	48 8d 35 9a 05 20 00 	lea    0x20059a(%rip),%rsi        # 200bf8 <__TMC_END__>
 65e:	55                   	push   %rbp
 65f:	48 29 fe             	sub    %rdi,%rsi
 662:	48 89 e5             	mov    %rsp,%rbp
 665:	48 c1 fe 03          	sar    $0x3,%rsi
 669:	48 89 f0             	mov    %rsi,%rax
 66c:	48 c1 e8 3f          	shr    $0x3f,%rax
 670:	48 01 c6             	add    %rax,%rsi
 673:	48 d1 fe             	sar    %rsi
 676:	74 18                	je     690 <register_tm_clones+0x40>
 678:	48 8b 05 21 05 20 00 	mov    0x200521(%rip),%rax        # 200ba0 <_ITM_registerTMCloneTable>
 67f:	48 85 c0             	test   %rax,%rax
 682:	74 0c                	je     690 <register_tm_clones+0x40>
 684:	5d                   	pop    %rbp
 685:	ff e0                	jmpq   *%rax
 687:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 68e:	00 00 
 690:	5d                   	pop    %rbp
 691:	c3                   	retq   
 692:	0f 1f 40 00          	nopl   0x0(%rax)
 696:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 69d:	00 00 00 

00000000000006a0 <__do_global_dtors_aux>:
 6a0:	80 3d 51 05 20 00 00 	cmpb   $0x0,0x200551(%rip)        # 200bf8 <__TMC_END__>
 6a7:	75 2f                	jne    6d8 <__do_global_dtors_aux+0x38>
 6a9:	48 83 3d f7 04 20 00 	cmpq   $0x0,0x2004f7(%rip)        # 200ba8 <__cxa_finalize@GLIBC_2.2.5>
 6b0:	00 
 6b1:	55                   	push   %rbp
 6b2:	48 89 e5             	mov    %rsp,%rbp
 6b5:	74 0c                	je     6c3 <__do_global_dtors_aux+0x23>
 6b7:	48 8b 3d 32 05 20 00 	mov    0x200532(%rip),%rdi        # 200bf0 <__dso_handle>
 6be:	e8 0d ff ff ff       	callq  5d0 <__cxa_finalize@plt>
 6c3:	e8 48 ff ff ff       	callq  610 <deregister_tm_clones>
 6c8:	c6 05 29 05 20 00 01 	movb   $0x1,0x200529(%rip)        # 200bf8 <__TMC_END__>
 6cf:	5d                   	pop    %rbp
 6d0:	c3                   	retq   
 6d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 6d8:	f3 c3                	repz retq 
 6da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000006e0 <frame_dummy>:
 6e0:	55                   	push   %rbp
 6e1:	48 89 e5             	mov    %rsp,%rbp
 6e4:	5d                   	pop    %rbp
 6e5:	e9 66 ff ff ff       	jmpq   650 <register_tm_clones>

00000000000006ea <aFunction>:
 6ea:	55                   	push   %rbp
 6eb:	48 89 e5             	mov    %rsp,%rbp
 6ee:	48 83 ec 20          	sub    $0x20,%rsp
 6f2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 6f6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 6fa:	48 8d 45 f6          	lea    -0xa(%rbp),%rax
 6fe:	48 89 d6             	mov    %rdx,%rsi
 701:	48 89 c7             	mov    %rax,%rdi
 704:	e8 87 fe ff ff       	callq  590 <strcpy@plt>
 709:	48 8d 45 f6          	lea    -0xa(%rbp),%rax
 70d:	48 89 c6             	mov    %rax,%rsi
 710:	48 8d 3d dd 00 00 00 	lea    0xdd(%rip),%rdi        # 7f4 <_IO_stdin_used+0x4>
 717:	b8 00 00 00 00       	mov    $0x0,%eax
 71c:	e8 8f fe ff ff       	callq  5b0 <printf@plt>
 721:	90                   	nop
 722:	c9                   	leaveq 
 723:	c3                   	retq   

0000000000000724 <main>:
 724:	55                   	push   %rbp
 725:	48 89 e5             	mov    %rsp,%rbp
 728:	48 83 ec 10          	sub    $0x10,%rsp
 72c:	89 7d fc             	mov    %edi,-0x4(%rbp)
 72f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 733:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
 737:	7f 16                	jg     74f <main+0x2b>
 739:	48 8d 3d c0 00 00 00 	lea    0xc0(%rip),%rdi        # 800 <_IO_stdin_used+0x10>
 740:	e8 5b fe ff ff       	callq  5a0 <puts@plt>
 745:	bf 00 00 00 00       	mov    $0x0,%edi
 74a:	e8 71 fe ff ff       	callq  5c0 <exit@plt>
 74f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 753:	48 83 c0 08          	add    $0x8,%rax
 757:	48 8b 00             	mov    (%rax),%rax
 75a:	48 89 c7             	mov    %rax,%rdi
 75d:	e8 88 ff ff ff       	callq  6ea <aFunction>
 762:	bf 00 00 00 00       	mov    $0x0,%edi
 767:	e8 54 fe ff ff       	callq  5c0 <exit@plt>
 76c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000770 <__libc_csu_init>:
 770:	41 57                	push   %r15
 772:	41 56                	push   %r14
 774:	49 89 d7             	mov    %rdx,%r15
 777:	41 55                	push   %r13
 779:	41 54                	push   %r12
 77b:	4c 8d 25 06 02 20 00 	lea    0x200206(%rip),%r12        # 200988 <__frame_dummy_init_array_entry>
 782:	55                   	push   %rbp
 783:	48 8d 2d 06 02 20 00 	lea    0x200206(%rip),%rbp        # 200990 <__init_array_end>
 78a:	53                   	push   %rbx
 78b:	41 89 fd             	mov    %edi,%r13d
 78e:	49 89 f6             	mov    %rsi,%r14
 791:	4c 29 e5             	sub    %r12,%rbp
 794:	48 83 ec 08          	sub    $0x8,%rsp
 798:	48 c1 fd 03          	sar    $0x3,%rbp
 79c:	e8 bf fd ff ff       	callq  560 <_init>
 7a1:	48 85 ed             	test   %rbp,%rbp
 7a4:	74 20                	je     7c6 <__libc_csu_init+0x56>
 7a6:	31 db                	xor    %ebx,%ebx
 7a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 7af:	00 
 7b0:	4c 89 fa             	mov    %r15,%rdx
 7b3:	4c 89 f6             	mov    %r14,%rsi
 7b6:	44 89 ef             	mov    %r13d,%edi
 7b9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 7bd:	48 83 c3 01          	add    $0x1,%rbx
 7c1:	48 39 dd             	cmp    %rbx,%rbp
 7c4:	75 ea                	jne    7b0 <__libc_csu_init+0x40>
 7c6:	48 83 c4 08          	add    $0x8,%rsp
 7ca:	5b                   	pop    %rbx
 7cb:	5d                   	pop    %rbp
 7cc:	41 5c                	pop    %r12
 7ce:	41 5d                	pop    %r13
 7d0:	41 5e                	pop    %r14
 7d2:	41 5f                	pop    %r15
 7d4:	c3                   	retq   
 7d5:	90                   	nop
 7d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 7dd:	00 00 00 

00000000000007e0 <__libc_csu_fini>:
 7e0:	f3 c3                	repz retq 

Disassembly of section .fini:

00000000000007e4 <_fini>:
 7e4:	48 83 ec 08          	sub    $0x8,%rsp
 7e8:	48 83 c4 08          	add    $0x8,%rsp
 7ec:	c3                   	retq   
